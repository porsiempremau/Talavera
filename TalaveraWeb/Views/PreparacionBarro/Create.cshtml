@model TalaveraWeb.Models.PreparacionBarroConsumo

@{
    ViewBag.Title = "Create";
}

<h2>Registrar preparación</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formCrearPreBar" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Preparación Barro</h4>
        @if (ViewBag.txtMensaje != null)
        {
            <div class="alert alert-warning" role="alert">
                @ViewBag.txtMensaje
            </div>
        }        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.Label("Locacion", "Locacion", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Locacion", (List<SelectListItem>)ViewBag.lstLocaciones, htmlAttributes: new { @class = "droplistStyle" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaPreparacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaPreparacion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FechaPreparacion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumPreparado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumPreparado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumPreparado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BarroNegro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BarroNegro, new { htmlAttributes = new { @class = "form-control", @min = "0" } })
                @Html.ValidationMessageFor(model => model.BarroNegro, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" style="margin-left:25px">
            @Html.Label("Recursos asignados para Barro Negro:")
            <div class="col-md-10">
                @for (var i = 0; i < Model.lstConsumoBarroNegro.Count; i++)
                {
                    <label>Barro: @Model.lstConsumoBarroNegro[i].Tipo de @Model.lstConsumoBarroNegro[i].Capacidad Kg </label>
                    @Html.HiddenFor(model => model.lstConsumoBarroNegro[i].CodigoBarro)
                    @Html.HiddenFor(model => model.lstConsumoBarroNegro[i].Tipo)
                    @Html.HiddenFor(model => model.lstConsumoBarroNegro[i].Capacidad)
                    @Html.HiddenFor(model => model.lstConsumoBarroNegro[i].Unidades)
                    @Html.HiddenFor(model => model.lstConsumoBarroNegro[i].TotalKg)
                    @Html.EditorFor(model => model.lstConsumoBarroNegro[i].BarroUsado, new { htmlAttributes = new { @class = "form-control", @min = "0" } })
                }
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.BarroBlanco, htmlAttributes: new { @class = "control-label col-md-2", @min = "0" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BarroBlanco, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BarroBlanco, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" style="margin-left:25px">
            @Html.Label("Recursos asignados para Barro Blanco:")
            <div class="col-md-10">
                @for (var i = 0; i < Model.lstConsumoBarroBlanco.Count; i++)
                {
                    <label>Barro: @Model.lstConsumoBarroBlanco[i].Tipo de @Model.lstConsumoBarroBlanco[i].Capacidad Kg </label>
                    @Html.HiddenFor(model => model.lstConsumoBarroBlanco[i].CodigoBarro)
                    @Html.HiddenFor(model => model.lstConsumoBarroBlanco[i].Tipo)
                    @Html.HiddenFor(model => model.lstConsumoBarroBlanco[i].Capacidad)
                    @Html.HiddenFor(model => model.lstConsumoBarroBlanco[i].Unidades)
                    @Html.HiddenFor(model => model.lstConsumoBarroBlanco[i].TotalKg)
                    @Html.EditorFor(model => model.lstConsumoBarroBlanco[i].BarroUsado, new { htmlAttributes = new { @class = "form-control", @min = "0" } })
                }
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Recuperado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Recuperado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Recuperado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EnPiedra, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EnPiedra, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EnPiedra, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TiempoAgitacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TiempoAgitacion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TiempoAgitacion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumTambos, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumTambos, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumTambos, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DesperdicioMojado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DesperdicioMojado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DesperdicioMojado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comentario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comentario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comentario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script src="~/Scripts/jquery-3.0.0.min.js"></script>
<script>

    $(document).ready(function () {

    });

    function actualizaUnidadesMax(){
        var lstBarroDisponible = @Html.Raw(Json.Encode(ViewBag.lstLuz));

        lstBarroDisponible.forEach(function(element){
            if(element.Tipo.includes("Negro")){
                document.getElementById("BarroNegro").setAttribute("max", element.TotalKg);
            }
            else if(element.Tipo.includes("Blanco")){
                document.getElementById("BarroBlanco").setAttribute("max", element.TotalKg);
            }
        })

        var lstCBN = @Html.Raw(Json.Encode(Model.lstConsumoBarroNegro));
        var i = 0;
        lstCBN.forEach(function(item){
            var n1 = "#lstConsumoBarroNegro_";
            var n2 = "__BarroUsado";
            var nombre =  n1.concat(i).concat(n2);
            $(nombre).attr("max", item.Unidades);
            i = i + 1;
        })

        var lstCBN = @Html.Raw(Json.Encode(Model.lstConsumoBarroBlanco));
        var i = 0;
        lstCBN.forEach(function(item){
            var n1 = "#lstConsumoBarroBlanco_";
            var n2 = "__BarroUsado";
            var nombre =  n1.concat(i).concat(n2);
            $(nombre).attr("max", item.Unidades);
            i = i + 1;
        })

    }

    actualizaUnidadesMax();



</script>

<div>
    @Html.ActionLink("Volver al listado", "Index")
</div>
